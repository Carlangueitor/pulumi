{{template "header"}}

{{.Comment}}

## Example Usage

{{range .Examples}}
### {{.Example.Heading}}

{{< langchoose nojavascript nogo >}}

```typescript
{{.Example.Code}}
```

```python
Coming soon!
```
{{end}}}

## Create a {{.Header.Title}} Resource

{{< langchoose csharp >}}

<div class="highlight"><pre class="chroma"><code class="language-typescript" data-lang="typescript">
{{.ConstructorGenerator "typescript" .ArgsRequired}}
</code></pre></div>

```python
{{.ConstructorGenerator "python" .ArgsRequired}}
```

```go
{{.ConstructorGenerator "go" .ArgsRequired}}
```

```csharp
{{.ConstructorGenerator "csharp" .ArgsRequired}}
```

Creates a {{.Header.Name}} resource with the given unique name, arguments, and options.

{{% lang nodejs %}}
{{template "constructor_args"}}
{{% /lang %}}

{{% lang go %}}
{{template "constructor_args"}}
{{% /lang %}}

{{% lang csharp %}}
{{template "constructor_args"}}
{{% /lang %}}

The following arguments are supported:

<!--
TODO: Unlike the other languages, Python does not have a separate Args object. The args are all just
named parameters of the constructor. Consider injecting `resource_name` and `opts` as the first two items
in the table of properties.
-->
{{template "properties" .InputProperties}}

## {{.Header.Title}} Output Properties

The following output properties are available:

{{template "properties" .OutputProperties}}

## Look up an Existing {{.Header.Name}} Resource

{{< langchoose csharp >}}

```typescript
public static get(name: string, id: pulumi.Input<pulumi.ID>, {{.StateParam}}opts?: pulumi.CustomResourceOptions): {{.Header.Title}};
```

<!-- TODO: This is currently hard coded for Bucket. Need to generalize for all resources. -->
```python
def get(resource_name, id, opts=None, acceleration_status=None, acl=None, arn=None, bucket=None, bucket_domain_name=None, bucket_prefix=None, bucket_regional_domain_name=None, cors_rules=None, force_destroy=None, hosted_zone_id=None, lifecycle_rules=None, loggings=None, object_lock_configuration=None, policy=None, region=None, replication_configuration=None, request_payer=None, server_side_encryption_configuration=None, tags=None, versioning=None, website=None, website_domain=None, website_endpoint=None)
```

<!-- TODO: This is currently hard coded for Bucket. Need to generalize for all resources. -->
```go
func GetBucket(ctx *pulumi.Context, name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error)
```

<!-- TODO: This is currently hard coded for Bucket. Need to generalize for all resources. -->
```csharp
public static Bucket Get(string name, Input<string> id, BucketState? state = null, CustomResourceOptions? options = null);
```

Get an existing {{.Header.Title}} resource's state with the given name, ID, and optional extra properties used to qualify the lookup.

{{%% lang nodejs %%}}
{{template "read_inputs"}}
{{%% /lang %%}}

{{%% lang go %%}}
{{template "read_inputs"}}
{{%% /lang %%}}

{{%% lang csharp %%}}
{{template "read_inputs"}}
{{%% /lang %%}}

{{if .StateParam }}
The following state arguments are supported:
{{template "properties" .StateInputs.Properties}}
{{end}}

## Import an Existing {{.Heeader.Name}} Resource
<!--
TODO: How do we want to show import? It will take a paragraph or two of explanation plus example, similar
to the content at https://www.pulumi.com/docs/intro/concepts/programming-model/#import
-->

TODO

## Supporting Types

{{range .NestedTypes}}
### {{.Name}}

{{template "properties" .Properties}}
{{end}}
